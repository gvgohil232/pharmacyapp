// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  password String
  name     String?
  products Product[]
}

model Category {
  id        Int                   @id @default(autoincrement())
  name      String
  img       String?
  posts     CategoriesOnProduct[]
  createdAt DateTime              @default(now())
  updatedAt DateTime              @updatedAt
}

model Product {
  id            Int                @id @default(autoincrement())
  name          String
  img           String?
  content       String?
  price         String?
  originalPrice String?
  category      String?
  ratings       String?
  reviews       String?
  categories    CategoriesOnProduct[]
  author        User?                 @relation(fields: [authorId], references: [id])
  authorId      Int?
  createdAt     DateTime              @default(now())
  updatedAt     DateTime              @updatedAt

  @@index([createdAt])
  @@map("products")
}

model CategoriesOnProduct {
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int // relation scalar field (used in the `@relation` attribute above)
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([productId, categoryId])
}

model Post {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([createdAt])
  @@map("posts")
}

model Offers {
  id         Int      @id @default(autoincrement())
  name       String
  percentage Int
  type       String
  bank       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
